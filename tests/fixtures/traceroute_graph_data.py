"""
Fixture data for traceroute graph testing.
"""

import time

# Sample traceroute graph data for testing
SAMPLE_GRAPH_DATA = {
    "nodes": [
        {
            "id": 1819569748,
            "name": "Tomate Base üçÖüåûüì° (üçÖ)",
            "avg_snr": -58.9,
            "connections": 6,
            "packet_count": 1250,
            "size": 15,
            "last_seen": int(time.time()) - 3600,
            "location": {"latitude": 40.7128, "longitude": -74.0060, "altitude": 10},
        },
        {
            "id": 2147483647,
            "name": "Central Hub Node",
            "avg_snr": -12.5,
            "connections": 12,
            "packet_count": 2500,
            "size": 20,
            "last_seen": int(time.time()) - 1800,
            "location": {"latitude": 40.7589, "longitude": -73.9851, "altitude": 25},
        },
        {
            "id": 3735928559,
            "name": "Edge Node Alpha",
            "avg_snr": -25.3,
            "connections": 4,
            "packet_count": 800,
            "size": 12,
            "last_seen": int(time.time()) - 900,
            "location": {"latitude": 40.6782, "longitude": -73.9442, "altitude": 5},
        },
        {
            "id": 0xDDDDDDDD,
            "name": "Edge Node Beta (TEND)",
            "avg_snr": -18.7,
            "connections": 3,
            "packet_count": 650,
            "size": 10,
            "last_seen": int(time.time()) - 600,
            "location": {"latitude": 40.7505, "longitude": -73.9934, "altitude": 15},
        },
        {
            "id": 1234567890,
            "name": "Relay Station Gamma",
            "avg_snr": -35.2,
            "connections": 8,
            "packet_count": 1800,
            "size": 16,
            "last_seen": int(time.time()) - 300,
            "location": {"latitude": 40.7282, "longitude": -74.0776, "altitude": 30},
        },
        {
            "id": 987654321,
            "name": "Remote Node Delta",
            "avg_snr": -42.1,
            "connections": 2,
            "packet_count": 450,
            "size": 8,
            "last_seen": int(time.time()) - 7200,
            "location": {"latitude": 40.6892, "longitude": -74.0445, "altitude": 8},
        },
        {
            "id": 555666777,
            "name": "Mesh Node Epsilon",
            "avg_snr": -28.9,
            "connections": 7,
            "packet_count": 1100,
            "size": 14,
            "last_seen": int(time.time()) - 1200,
            "location": {"latitude": 40.7831, "longitude": -73.9712, "altitude": 20},
        },
        {
            "id": 111222333,
            "name": "Gateway Node Zeta",
            "avg_snr": -15.4,
            "connections": 9,
            "packet_count": 2200,
            "size": 18,
            "last_seen": int(time.time()) - 450,
            # This node intentionally has no location to test mixed scenarios
        },
    ],
    "links": [
        {
            "source": 1819569748,
            "target": 2147483647,
            "avg_snr": -15.2,
            "strength": 8,
            "packet_count": 450,
            "type": "direct",
            "last_seen": int(time.time()) - 300,
        },
        {
            "source": 2147483647,
            "target": 3735928559,
            "avg_snr": -22.1,
            "strength": 6,
            "packet_count": 320,
            "type": "direct",
            "last_seen": int(time.time()) - 600,
        },
        {
            "source": 2147483647,
            "target": 0xDDDDDDDD,
            "avg_snr": -18.5,
            "strength": 7,
            "packet_count": 380,
            "type": "direct",
            "last_seen": int(time.time()) - 400,
        },
        {
            "source": 1234567890,
            "target": 2147483647,
            "avg_snr": -25.8,
            "strength": 5,
            "packet_count": 280,
            "type": "direct",
            "last_seen": int(time.time()) - 800,
        },
        {
            "source": 987654321,
            "target": 1234567890,
            "avg_snr": -38.2,
            "strength": 3,
            "packet_count": 150,
            "type": "direct",
            "last_seen": int(time.time()) - 1200,
        },
        {
            "source": 555666777,
            "target": 2147483647,
            "avg_snr": -20.3,
            "strength": 6,
            "packet_count": 340,
            "type": "direct",
            "last_seen": int(time.time()) - 500,
        },
        {
            "source": 111222333,
            "target": 2147483647,
            "avg_snr": -12.7,
            "strength": 9,
            "packet_count": 520,
            "type": "direct",
            "last_seen": int(time.time()) - 200,
        },
        {
            "source": 3735928559,
            "target": 555666777,
            "avg_snr": -30.1,
            "strength": 4,
            "packet_count": 180,
            "type": "direct",
            "last_seen": int(time.time()) - 900,
        },
        {
            "source": 0xDDDDDDDD,
            "target": 111222333,
            "avg_snr": -16.9,
            "strength": 7,
            "packet_count": 410,
            "type": "direct",
            "last_seen": int(time.time()) - 350,
        },
        {
            "source": 1819569748,
            "target": 1234567890,
            "avg_snr": -32.4,
            "strength": 4,
            "packet_count": 220,
            "type": "direct",
            "last_seen": int(time.time()) - 700,
        },
    ],
    "indirect_connections": [
        {
            "source": 987654321,
            "target": 3735928559,
            "avg_snr": -45.2,
            "strength": 2,
            "path_count": 85,
            "hop_count": 3,
            "type": "indirect",
            "last_seen": int(time.time()) - 1500,
        },
        {
            "source": 987654321,
            "target": 111222333,
            "avg_snr": -42.8,
            "strength": 2,
            "path_count": 95,
            "hop_count": 3,
            "type": "indirect",
            "last_seen": int(time.time()) - 1800,
        },
    ],
    "stats": {"links_found": 10, "packets_with_rf_hops": 3250, "total_rf_hops": 28},
    "filters": {"hours": 24, "min_snr": -200, "include_indirect": True},
}


def get_sample_graph_data():
    """Return a copy of the sample graph data."""
    import copy

    return copy.deepcopy(SAMPLE_GRAPH_DATA)
